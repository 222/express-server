<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.express.server.mapper.UserMapper">

    <resultMap type="com.express.server.model.User" id="UserMap">
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="createdBy" column="created_by" jdbcType="BIGINT"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" jdbcType="BIGINT"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="selectById" resultMap="UserMap">
        SELECT user_id,
               phone,
               created_by,
               created_time,
               updated_by
        FROM user
        WHERE user_id = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="selectList" resultMap="UserMap">
        SELECT
        user_id, phone, created_by, created_time, updated_by
        FROM user
        <where>
            <if test="phone != null and phone != ''">
                AND phone = #{phone}
            </if>
            <if test="createdBy != null">
                AND created_by = #{createdBy}
            </if>
            <if test="updatedBy != null">
                AND updated_by = #{updatedBy}
            </if>
        </where>
        ORDER BY created_time DESC
    </select>

    <!--新增所有列-->
    <insert id="insert" parameterType="com.express.server.model.User">
        INSERT INTO user(user_id, phone, created_by, updated_by)
        VALUES (#{userId}, #{phone}, #{createdBy}, #{updatedBy})
    </insert>

    <insert id="insertList" parameterType="com.express.server.model.User">
        INSERT INTO user(user_id, phone, created_by, updated_by)
        VALUES
        <foreach collection="userList" item="user" separator=",">
            (#{user.userId}, #{user.phone}, #{user.createdBy}, #{user.updatedBy})
        </foreach>
    </insert>

    <update id="update" parameterType="com.express.server.model.User">
        UPDATE user
        <set>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy}
            </if>
        </set>
        WHERE user_id = #{userId}
    </update>

    <insert id="updateList" parameterType="com.express.server.model.User">
        INSERT INTO user(user_id, phone, created_by, updated_by)
        VALUES
        <foreach collection="userList" item="user" separator=",">
            (#{user.userId}, #{user.phone}, #{user.createdBy}, #{user.updatedBy})
        </foreach>
        ON DUPLICATE KEY UPDATE
        user_id = VALUES(user_id),
        phone = VALUES(phone),
        created_by = VALUES(created_by),
        updated_by = VALUES(updated_by)
    </insert>

    <delete id="deleteById">
        DELETE
        FROM user
        WHERE user_id = #{userId}
    </delete>

    <select id="exists" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1
                      FROM user
                      WHERE field = #{field}) AS record_exists
    </select>

    <select id="loadByPhone" resultType="com.express.server.model.User">
        SELECT user_id,
               phone,
               created_by,
               created_time,
               updated_by
        FROM user
        WHERE phone = #{phone}
    </select>

</mapper>

